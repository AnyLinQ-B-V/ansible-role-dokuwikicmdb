---
# Tasks voor het aanmaken van lokale documentatiebestanden en het bijwerken van DokuWiki

# Stop de play als de vereiste variabele niet is gedefinieerd
- name: DokuWiki Update | Ensure dokuwiki_targetserver is defined
  ansible.builtin.fail:
    msg: >
      The variable 'dokuwiki_targetserver' must be defined to update DokuWiki.
      Please set it in your inventory or playbook vars.
  when: dokuwiki_targetserver is not defined or dokuwiki_targetserver == "your_dokuwiki_server_hostname_or_ip"

# Maak de directory aan voor lokale beschrijvingsbestanden op elke server
- name: DokuWiki Update | Create directories for local description files on each server
  ansible.builtin.file:
    path: "{{ dokuwiki_local_destination }}"
    state: directory
    owner: "{{ dokuwiki_local_destination_user }}"
    group: "{{ dokuwiki_local_destination_group }}"
    mode: "0775"

# Maak het lokale beschrijvingsbestand aan (indien nog niet aanwezig)
- name: DokuWiki Update | Create the local description file on each server (if missing)
  ansible.builtin.template:
    src: description.txt.j2
    dest: "{{ dokuwiki_local_destination }}/description.txt"
    owner: "{{ dokuwiki_local_destination_user }}"
    group: "{{ dokuwiki_local_destination_group }}"
    mode: "0644"
    force: false  # Overschrijf niet als het al bestaat

# Lees de inhoud van het lokale beschrijvingsbestand
- name: DokuWiki Update | Slurp local description file
  ansible.builtin.slurp:
    src: "{{ dokuwiki_local_destination }}/description.txt"
  register: server_description_slurped
  ignore_errors: true

- name: DokuWiki Update | Set server_description fact
  ansible.builtin.set_fact:
    server_description:
      content: >-
        {% if server_description_slurped is succeeded and server_description_slurped.content is defined %}
        {{ server_description_slurped.content }}
        {% else %}
        {{ '' | b64encode }}
        {% endif %}

# Maak het lokale changelog-bestand aan (indien nog niet aanwezig)
- name: DokuWiki Update | Create local changelog file (if missing)
  ansible.builtin.copy:
    content: ""  # Maakt een leeg bestand aan
    dest: "{{ dokuwiki_local_destination }}/changelog.txt"
    owner: "{{ dokuwiki_local_destination_user }}"
    group: "{{ dokuwiki_local_destination_group }}"
    mode: "0644"
    force: false  # Overschrijf niet als het al bestaat

# Lees de inhoud van het lokale changelog-bestand
- name: DokuWiki Update | Slurp local changelog file
  ansible.builtin.slurp:
    src: "{{ dokuwiki_local_destination }}/changelog.txt"
  register: server_changelog_slurped
  ignore_errors: true

- name: DokuWiki Update | Set server_changelog fact
  ansible.builtin.set_fact:
    server_changelog:
      content: >-
        {% if server_changelog_slurped is succeeded and server_changelog_slurped.content is defined %}
        {{ server_changelog_slurped.content }}
        {% else %}
        {{ '' | b64encode }}
        {% endif %}


# Maak het lokale notitie-bestand aan (indien nog niet aanwezig)
- name: DokuWiki Update | Create local notes file (if missing)
  ansible.builtin.copy:
    content: ""  # Maakt een leeg bestand aan
    dest: "{{ dokuwiki_local_destination }}/notes.txt"
    owner: "{{ dokuwiki_local_destination_user }}"
    group: "{{ dokuwiki_local_destination_group }}"
    mode: "0644"
    force: false  # Overschrijf niet als het al bestaat

# Lees de inhoud van het lokale notitie-bestand
- name: DokuWiki Update | Slurp local notes file
  ansible.builtin.slurp:
    src: "{{ dokuwiki_local_destination }}/notes.txt"
  register: server_notes_slurped
  ignore_errors: true

- name: DokuWiki Update | Set server_notes fact
  ansible.builtin.set_fact:
    server_notes:
      content: >-
        {% if server_notes_slurped is succeeded and server_notes_slurped.content is defined %}
        {{ server_notes_slurped.content }}
        {% else %}
        {{ '' | b64encode }}
        {% endif %}

# Maak de basisdirectory's aan voor DokuWiki-pagina's op de DokuWiki-server
- name: DokuWiki Update | Create base directories for DokuWiki pages on target server
  ansible.builtin.file:
    path: "{{ dokuwiki_data_root_path }}/{{ (dokuwiki_server_pages_namespace | replace(':', '/')) if dokuwiki_server_pages_namespace else '' }}"
    state: directory
    owner: "{{ dokuwiki_user }}"
    group: "{{ dokuwiki_group }}"
    mode: "0775"
  delegate_to: "{{ dokuwiki_targetserver }}"
  run_once: true

# Debug: Check the value of dokuwiki_server_pages_namespace before using it in the template
- name: DokuWiki Update | Debug dokuwiki_server_pages_namespace
  ansible.builtin.debug:
    msg: "dokuwiki_server_pages_namespace is: {{ dokuwiki_server_pages_namespace }}"
  delegate_to: "{{ dokuwiki_targetserver }}"  # Debug on the same host context as the template task
  run_once: true

# Set dokuwiki_link_ns_for_server_pages as a fact on the target server
- name: DokuWiki Update | Set fact for server list template namespace
  ansible.builtin.set_fact:
    dokuwiki_link_ns_for_server_pages: "{{ dokuwiki_server_pages_namespace }}"
  delegate_to: "{{ dokuwiki_targetserver }}"
  run_once: true

# Zorg ervoor dat de directory voor de serverlijst bestaat
- name: DokuWiki Update | Place the server list template on the target server
  ansible.builtin.template:
    src: serverlist.txt.j2
    dest: "{{ dokuwiki_data_root_path }}/{{ dokuwiki_serverlist_page_fqn | replace(':', '/') }}.txt"
    owner: "{{ dokuwiki_user }}"
    group: "{{ dokuwiki_group }}"
    mode: "0644"
  delegate_to: "{{ dokuwiki_targetserver }}"
  run_once: true

# Plaats voor elke server een eigen pagina op de DokuWiki-server
- name: DokuWiki Update | Place each server's page on DokuWiki target server
  ansible.builtin.template:
    src: server.txt.j2
    dest: "{{ dokuwiki_data_root_path }}/{{ (dokuwiki_server_pages_namespace | replace(':', '/')) if dokuwiki_server_pages_namespace else '' }}/{{ inventory_hostname }}.txt"
    owner: "{{ dokuwiki_user }}"
    group: "{{ dokuwiki_group }}"
    mode: "0644"
  delegate_to: "{{ dokuwiki_targetserver }}"
